Program starting as '"C:\Users\mhfri\OneDrive\Documents\programming languages\LUA\ZeroBraneStudio\bin\lua54.exe" -e "io.stdout:setvbuf('no')" "C:\Users\mhfri\OneDrive\Documents\programming languages\LUA\MHF-CAPL-Course\Week8\week8-06 for loop.lua"'.
Program 'lua54.exe' started in 'C:\Users\mhfri\OneDrive\Documents\programming languages\LUA\MHF-CAPL-Course\Week8' (pid: 10144).

Basically Another PEG Language -- aka BAPL

NEW cases

PROGRAM ----------------------------- 001 ------------------------------
001 function main () {
002   i = 42;
003   for i = 1, 3 {
004     @ i
005   };
006   return i
007 }

printing: 1
printing: 2
printing: 3

--->42


PROGRAM ----------------------------- 002 ------------------------------
001 function main () {
002   var i = 42;
003   for i = 3, 1, -1 {
004     @ i
005   };
006   return i
007 }

printing: 3
printing: 2
printing: 1

--->42


PROGRAM ----------------------------- 003 ------------------------------
001 # where BAPL began ...
002 
003 function addqueen(a, b);
004 
005 function main () {
006   N = 8;
007   var qs = new[N];
008   addqueen(qs,1);
009 }
010 
011 function isplaceok (rows_col, cur_row, col) {
012   for row = 1, cur_row - 1 { # for each queen already placed
013     var previous_queen_col = rows_col[row];
014     if (previous_queen_col == col or                    # same column
015        (previous_queen_col == col - cur_row + row) or   # same diagonal to left
016        (previous_queen_col == col + cur_row - row) ) {  # same diagonal to right
017         return 0
018     }
019   };
020   return 1
021 }
022 
023  function printsolution (rows_col) {
024   var s = "\n";
025   for row = 1, N {
026    for col = 1, N {
027     s = s | (rows_col[row] == col and "X" or "_") | " "
028   };
029    s = s | "\n"  };
030   @ s
031 }
032 
033 function write_rows_col(rows_col) {
034   for i = 1, N {   
035     @ rows_col[i] | " "
036   }
037 }
038 
039 function addqueen(rows_col, cur_row) {
040   if cur_row > N {
041     printsolution(rows_col);
042   } else {
043     for col = 1, N {
044       var isok = isplaceok(rows_col, cur_row, col);
045       if isok {
046         rows_col[cur_row] = col;
047         addqueen(rows_col, cur_row + 1)
048       }
049     }
050   }
051 }
052 
053 

printing: 
X _ _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 


printing: 
X _ _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 


printing: 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 


printing: 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 


printing: 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 


printing: 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 


printing: 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 


printing: 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 


printing: 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ X _ _ _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 


printing: 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 


printing: 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
X _ _ _ _ _ _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 


printing: 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 


printing: 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ _ X 


printing: 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ _ _ X _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ _ X _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ _ _ X _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 


printing: 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
X _ _ _ _ _ _ _ 


printing: 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 


printing: 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 


printing: 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 


printing: 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ _ X 


printing: 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ X _ _ _ _ 


printing: 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 


printing: 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 


printing: 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ X _ _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 


printing: 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 


printing: 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 


printing: 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 


printing: 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 


printing: 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 


printing: 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 


printing: 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ _ _ _ _ _ X 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ _ _ _ _ _ X 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 


--->0


PROGRAM ----------------------------- 004 ------------------------------
001 function main () {
002     var i = 6;
003     var to = 0;
004     var step = -2;
005     while 0<step and i<=to or step<0 and to<=i { 
006       @ i;
007       i = i + step
008   }
009 }

printing: 6
printing: 4
printing: 2
printing: 0

--->0


PROGRAM ----------------------------- 005 ------------------------------
001 function main () {
002   {
003     var i = 1;
004     var to = 6;
005     var step = 2;
006     while 0<step and i<=to or step<0 and to<=i { 
007       {@ i};
008       i = i + step
009     } 
010   }
011 }

printing: 1
printing: 3
printing: 5

--->0


PROGRAM ----------------------------- 006 ------------------------------
001 function main () {
002   var i = -99;
003   for i = 1, 6, 2 {
004     @ i
005   };
006   return i
007 }

printing: 1
printing: 3
printing: 5

--->-99


PROGRAM ----------------------------- 007 ------------------------------
001 function main () {
002   var i = -99;
003   for i = 6, 1, -2 {
004     @ i
005   };
006   return i
007 }

printing: 6
printing: 4
printing: 2

--->-99


PROGRAM ----------------------------- 008 ------------------------------
001 function main () {
002   var n = 0;
003   var i = 4; 
004   while i {
005     var j = 4;
006     while j {
007       j = j - 1;
008       n = n + 1
009     };
010     i = i - 1
011   };
012 
013   return n
014 }

--->16


PROGRAM ----------------------------- 009 ------------------------------
001 function main () {
002   var N = 4;
003   var a = new[N][N];
004   var i = 1; 
005   var n = 0; 
006   while i <= N {
007     var j = 1;
008     while j <= N {
009       a[i][j] = i * 10 + j;
010       @ "a[{}][{}] = {}" <- i  <- j  <- a[i][j];
011       j = j + 1;
012       n = n + 1;
013     };
014     i = i + 1;
015   };
016   return n;
017 }

printing: a[1][1] = 11
printing: a[1][2] = 12
printing: a[1][3] = 13
printing: a[1][4] = 14
printing: a[2][1] = 21
printing: a[2][2] = 22
printing: a[2][3] = 23
printing: a[2][4] = 24
printing: a[3][1] = 31
printing: a[3][2] = 32
printing: a[3][3] = 33
printing: a[3][4] = 34
printing: a[4][1] = 41
printing: a[4][2] = 42
printing: a[4][3] = 43
printing: a[4][4] = 44

--->16


PROGRAM ----------------------------- 010 ------------------------------
001 function addqueen(a, b);
002 
003 function main () {
004   N = 8;
005   var qs = new[N];
006   addqueen(qs,1);
007 }
008 
009 function isplaceok (rows_col, cur_row, col) {
010   #for row = 1, cur_row - 1 do 
011   var row = 1;
012   while row <= cur_row - 1 { # for each queen already placed
013     var previous_queen_col = rows_col[row];
014     if (previous_queen_col == col or                    # same column
015        (previous_queen_col == col - cur_row + row) or   # same diagonal to left
016        (previous_queen_col == col + cur_row - row) ) {  # same diagonal to right
017         return 0
018     };
019     row = row + 1
020   };
021   return 1
022 }
023 
024  function printsolution (rows_col) {
025   var s = "\n";
026   var row = 1;
027   while row <= N {
028    var col = 1;
029    while col <= N {
030     s = s | (rows_col[row] == col and "X" or "_") | " ";
031     col = col + 1
032    };
033    s = s | "\n";
034    row = row + 1
035   };
036   @ s
037 }
038 
039 function write_rows_col(rows_col) {
040   var i = 1;
041   while i <= N {   
042     @ rows_col[i] | " ";
043     i = i + 1
044   }
045 }
046 
047 function addqueen(rows_col, cur_row) {
048   if cur_row > N {
049     printsolution(rows_col);
050   } else {
051     var col = 1;
052     while col <= N {
053       var isok = isplaceok(rows_col, cur_row, col);
054       if isok {
055         rows_col[cur_row] = col;
056         addqueen(rows_col, cur_row + 1)
057       };
058       col = col + 1
059     }
060   }
061 }
062 
063 

printing: 
X _ _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 


printing: 
X _ _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 


printing: 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 


printing: 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 


printing: 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 


printing: 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 


printing: 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 


printing: 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 


printing: 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ X _ _ _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 


printing: 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 


printing: 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 


printing: 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
X _ _ _ _ _ _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 


printing: 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 


printing: 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ _ X 


printing: 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ _ _ X _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ _ X _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ _ _ X _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 


printing: 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
X _ _ _ _ _ _ _ 


printing: 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 


printing: 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 


printing: 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 


printing: 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ _ X 


printing: 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ X _ _ _ _ 


printing: 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 


printing: 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 


printing: 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ X _ _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 


printing: 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 


printing: 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 


printing: 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 


printing: 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 


printing: 
_ _ _ _ _ _ X _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 


printing: 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ _ _ _ _ X _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 


printing: 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ X _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ _ _ _ _ X _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ _ X 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ _ X 
_ _ _ _ _ X _ _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ X _ _ _ 


printing: 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ _ _ _ _ _ X 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 
_ _ _ _ _ X _ _ 


printing: 
_ _ _ _ _ _ _ X 
_ _ X _ _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ X _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ X _ _ _ _ 


printing: 
_ _ _ _ _ _ _ X 
_ _ _ X _ _ _ _ 
X _ _ _ _ _ _ _ 
_ _ X _ _ _ _ _ 
_ _ _ _ _ X _ _ 
_ X _ _ _ _ _ _ 
_ _ _ _ _ _ X _ 
_ _ _ _ X _ _ _ 


--->0


PROGRAM ----------------------------- 011 ------------------------------
001 function fact(n, i = 35, c = 5 + 2, e = 0) {
002   @ "ARGS: n={} i={} c={} e={}"  <- n  <- i  <- c <- e  ;
003   if n {
004     var e = i + c + e; 
005     @ "LOCS: n={} i={} c={} e={}"  <- n  <- i  <- c  <- e  ;
006     return n * fact(n-1, 30, 12)
007   } else {
008     return 1
009   }
010 }
011 
012 function main() {
013     return fact(6)
014 }

printing: ARGS: n=6 i=35 c=7 e=0
printing: LOCS: n=6 i=35 c=7 e=42

printing: ARGS: n=5 i=30 c=12 e=0
printing: LOCS: n=5 i=30 c=12 e=42

printing: ARGS: n=4 i=30 c=12 e=0
printing: LOCS: n=4 i=30 c=12 e=42

printing: ARGS: n=3 i=30 c=12 e=0
printing: LOCS: n=3 i=30 c=12 e=42

printing: ARGS: n=2 i=30 c=12 e=0
printing: LOCS: n=2 i=30 c=12 e=42

printing: ARGS: n=1 i=30 c=12 e=0
printing: LOCS: n=1 i=30 c=12 e=42

printing: ARGS: n=0 i=30 c=12 e=0

--->720


PROGRAM ----------------------------- 012 ------------------------------
001 # so, now let's try some indirect recursion
002 function foo(x);
003 
004 function bar(x) {
005   if 42 < x {
006     return foo(x)
007   } else {
008     return x
009   }
010 }
011 
012 function foo(x) {
013   x = x - 1;
014   return bar(x)
015 }
016 
017 function main ( ) {
018   return bar(45)
019 }

--->42


PROGRAM ----------------------------- 013 ------------------------------
001 function main() {
002   s = 10;
003   a = new[s][2];
004   i = 1;
005   @ "Let's have fun for a while!";
006   while i <= s {
007     a[i][1] = i!;
008     a[i][2] = i^2;
009     @ i | "! = " | a[i][1] | "    " | i | "^2 = " | a[i][2];
010     i = i + 1
011   };
012   return "Yay"
013 }

printing: Let's have fun for a while!
printing: 1! = 1    1^2 = 1.0
printing: 2! = 2    2^2 = 4.0
printing: 3! = 6    3^2 = 9.0
printing: 4! = 24    4^2 = 16.0
printing: 5! = 120    5^2 = 25.0
printing: 6! = 720    6^2 = 36.0
printing: 7! = 5040    7^2 = 49.0
printing: 8! = 40320    8^2 = 64.0
printing: 9! = 362880    9^2 = 81.0
printing: 10! = 3628800    10^2 = 100.0

--->Yay


PROGRAM ----------------------------- 014 ------------------------------
001 function main() {
002   if 1 or 0 {
003     @ "it's true"
004   };
005   unless not 1 or 0 {
006     @ "unless it isn't"
007   };
008   return 7
009 }

printing: it's true
printing: unless it isn't

--->7


PROGRAM ----------------------------- 015 ------------------------------
001 #{
002   Impact of a single new line in function tozone:
003   t["size"] = 2 -- this attribute causes zone type to inherit
004                 -- all the functionality of array type :)
005 }#
006 function main() {
007   z = 3:9 + 1:-7;  
008   @ z;
009   @ "{}{}"  <-  z[1]  <- z[2]; 
010   x, y = z;
011   @ "{}{}"  <-  x <-  y; 
012 }

printing: 4:2
printing: 42
printing: 42

--->0


PROGRAM ----------------------------- 016 ------------------------------
001 # associative arrays
002 function main ( ) {
003   a = new[];
004   b = new[];
005   a["foo"] = b;
006   a["foo"]["bar"] = "is";
007   @ "it {} what it {}"  <-  a["foo"]["bar"];
008   
009   a = new[];
010   a["y"] = 2;
011   a["x"] = 4;
012   m, n = a;  # destructuring
013   @ "{}{} since keys are sorted for interpolation"  <-  m  <-  n;
014 }

printing: it is what it is
printing: 42 since keys are sorted for interpolation

--->0


PROGRAM ----------------------------- 017 ------------------------------
001 # things are too structured
002 function main() {
003   a = new[3];
004   a[1] = 5;
005   a[2] = 6;
006   a[3] = 7;
007   
008   x, y, z = a;   # so, we will now destructure them
009   @ "{}, {}, and {}" <- x <- y <- z;
010   
011   @ "{}'s are literally polite"  <-  "{}";
012   @ "strings { } can say \"no thankyou\""  <-  "surplus"  <- "exprs";
013   @ "but they {} to be padded on the back {} this"  <-  "like";
014   
015   return x:y + z   # zone type still working
016 }

printing: 5, 6, and 7
printing: {}'s are literally polite
printing: strings { } can say "no thankyou"
printing: but they like to be padded on the back like this

--->12:13


PROGRAM ----------------------------- 018 ------------------------------
001 # six tests for short cct and and or
002 function main() {
003   @ 0 and 4 < 3;
004   return 7
005 }

printing: 0

--->7


PROGRAM ----------------------------- 019 ------------------------------
001 function main() {
002   @ 1 and 4 < 3;
003   return 7
004 }

printing: 0

--->7


PROGRAM ----------------------------- 020 ------------------------------
001 function main() {
002   @ 1 and 2 < 3;
003   return 7
004 }

printing: 1

--->7


PROGRAM ----------------------------- 021 ------------------------------
001 function main() {
002   @ 0 or 4 < 3;
003   return 7
004 }

printing: 0

--->7


PROGRAM ----------------------------- 022 ------------------------------
001 function main() {
002   @ 1 or 4 < 3;
003   return 7
004 }

printing: 1

--->7


PROGRAM ----------------------------- 023 ------------------------------
001 function main() {
002   @ 1 or 2 < 3;
003   return 7
004 }

printing: 1

--->7


PROGRAM ----------------------------- 024 ------------------------------
001 function foo() {return 99}
002 function main() {return foo()}

--->99


PROGRAM ----------------------------- 025 ------------------------------
001 function foo();
002 function foo() {return 99}
003 function foo() {return 42}
004 function main() {return foo()}

--->42


PROGRAM ----------------------------- 026 ------------------------------
001 function foo() {return 42}
002 function main() {return fo()}


SYNTAX ERROR (pos 53 of 56):
002 function main() {return fo()}
                             ^
function 'fo' hasn't been defined


PROGRAM ----------------------------- 027 ------------------------------
001 function foo();
002 function main() {return foo()}


SYNTAX ERROR (pos 45 of 46):
002 function main() {return foo()}
                                ^
function 'foo' has only been fwd declared


PROGRAM ----------------------------- 028 ------------------------------
001 function inc() {return 42}
002 function main() {return inc()}


SYNTAX ERROR (pos 12 of 57):
001 function inc() {return 42}
               ^
cannot use reserved word 'inc' as a function name


PROGRAM ----------------------------- 029 ------------------------------
001 function foo() {return 42}
002 function main() {return foo}


SYNTAX ERROR (pos 54 of 55):
002 function main() {return foo}
                              ^
variable 'foo' does not exist
you may have intended to call the function foo


PROGRAM ----------------------------- 030 ------------------------------
001 function main() {
002   if 0 {
003     @ 99
004   } else {
005     @ 999
006   };
007   return 7
008 }

printing: 999

--->7


PROGRAM ----------------------------- 031 ------------------------------
001 function main() {
002   if 1 {
003     x = 1
004   } else {
005     x = 2
006   };
007   return 7
008 }

--->7


PROGRAM ----------------------------- 032 ------------------------------
001 function main() {
002   if 2 < 1 {
003     return 5
004   } elseif 0 {
005     return 7
006   } elseif 0 {
007     return 9
008   } else {
009     if 0 {return 99} elseif not 1 < 9 < 3 {return 999}
010   };
011   return "never this"
012 }
013 

--->999


REGRESSION TESTS
Program completed in 0.59 seconds (pid: 10144).
